/**
 * PhotoRoom API
 * The power of PhotoRoom, automated.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-help@photorom.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AccountDetails200ResponseCredits from './AccountDetails200ResponseCredits';

/**
 * The AccountDetails200Response model module.
 * @module model/AccountDetails200Response
 * @version 1.0.0
 */
class AccountDetails200Response {
    /**
     * Constructs a new <code>AccountDetails200Response</code>.
     * @alias module:model/AccountDetails200Response
     * @param credits {module:model/AccountDetails200ResponseCredits} 
     */
    constructor(credits) { 
        
        AccountDetails200Response.initialize(this, credits);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, credits) { 
        obj['credits'] = credits;
    }

    /**
     * Constructs a <code>AccountDetails200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AccountDetails200Response} obj Optional instance to populate.
     * @return {module:model/AccountDetails200Response} The populated <code>AccountDetails200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AccountDetails200Response();

            if (data.hasOwnProperty('credits')) {
                obj['credits'] = AccountDetails200ResponseCredits.constructFromObject(data['credits']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AccountDetails200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AccountDetails200Response</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AccountDetails200Response.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `credits`
        if (data['credits']) { // data not null
          AccountDetails200ResponseCredits.validateJSON(data['credits']);
        }

        return true;
    }


}

AccountDetails200Response.RequiredProperties = ["credits"];

/**
 * @member {module:model/AccountDetails200ResponseCredits} credits
 */
AccountDetails200Response.prototype['credits'] = undefined;






export default AccountDetails200Response;

