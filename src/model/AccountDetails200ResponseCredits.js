/**
 * PhotoRoom API
 * The power of PhotoRoom, automated.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-help@photorom.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AccountDetails200ResponseCredits model module.
 * @module model/AccountDetails200ResponseCredits
 * @version 1.0.0
 */
class AccountDetails200ResponseCredits {
    /**
     * Constructs a new <code>AccountDetails200ResponseCredits</code>.
     * @alias module:model/AccountDetails200ResponseCredits
     * @param available {Number} The number of credits available
     * @param subscription {Number} The number of credits available in the subscription
     */
    constructor(available, subscription) { 
        
        AccountDetails200ResponseCredits.initialize(this, available, subscription);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, available, subscription) { 
        obj['available'] = available;
        obj['subscription'] = subscription;
    }

    /**
     * Constructs a <code>AccountDetails200ResponseCredits</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AccountDetails200ResponseCredits} obj Optional instance to populate.
     * @return {module:model/AccountDetails200ResponseCredits} The populated <code>AccountDetails200ResponseCredits</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AccountDetails200ResponseCredits();

            if (data.hasOwnProperty('available')) {
                obj['available'] = ApiClient.convertToType(data['available'], 'Number');
            }
            if (data.hasOwnProperty('subscription')) {
                obj['subscription'] = ApiClient.convertToType(data['subscription'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AccountDetails200ResponseCredits</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AccountDetails200ResponseCredits</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AccountDetails200ResponseCredits.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

AccountDetails200ResponseCredits.RequiredProperties = ["available", "subscription"];

/**
 * The number of credits available
 * @member {Number} available
 */
AccountDetails200ResponseCredits.prototype['available'] = undefined;

/**
 * The number of credits available in the subscription
 * @member {Number} subscription
 */
AccountDetails200ResponseCredits.prototype['subscription'] = undefined;






export default AccountDetails200ResponseCredits;

